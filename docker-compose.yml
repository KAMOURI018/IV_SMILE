version: "3.8"

services:
  timescaledb:
    image: timescale/timescaledb:2.11.1-pg14
    container_name: timescaledb
    environment:
      - POSTGRES_USER=khalil
      - POSTGRES_PASSWORD=MyStrongPass123
      - POSTGRES_DB=volatility_db
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    ports:
      - "55432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U khalil -d volatility_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.3.2
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-producer:
    build:
      context: ./producer
    container_name: kafka-producer
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092

  kafka-consumer:
    build:
      context: ./consumer
    volumes:
      - ./consumer:/app
      - ./model:/app/models
      - ./mlruns:/app/mlruns
    container_name: kafka-consumer
    depends_on:
      kafka:
        condition: service_healthy
      timescaledb:
        condition: service_healthy
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_NAME=volatility_db
      - DB_USER=khalil
      - DB_PASS=MyStrongPass123

  model-trainer:
    build:
      context: ./model
    volumes:
      - ./model:/app
      - ./mlruns:/app/mlruns
    environment:
      DB_USER: khalil
      DB_PASS: MyStrongPass123
      DB_HOST: timescaledb
      DB_PORT: 5432
      DB_NAME: volatility_db
      MLFLOW_TRACKING_URI: file:/app/mlruns
    depends_on:
      - timescaledb

  predictor:
    volumes:
      - ./mlruns:/app/mlruns
      - ./predictor:/app
      - ./predictor/model_artifacts:/app/model_artifacts
    build:
      context: ./predictor
    container_name: predictor
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=option_data
      - MLFLOW_MODEL_URI=mlruns\494802465030627392\models\m-5d52f37a35c442ce890f1be629b0222f\artifacts\
      
    restart: always

  dashboard:
    build: ./dashboard
    ports:
      - "8501:8501"
    volumes:
      - ./dashboard:/app
    restart: always

  mlflow-server:
    image: continuumio/miniconda3
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    working_dir: /mlruns
    command: >
      /bin/bash -c "
      pip install mlflow && 
      mlflow ui --backend-store-uri file:/mlruns --host 0.0.0.0 --port 5000
      "
volumes:
  db-data:
